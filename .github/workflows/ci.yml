on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: CI

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Lint (clippy)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features
      - name: Lint (rustfmt)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Install cargo readme
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-readme
          version: latest
          use-tool-cache: true
      - name: Run cargo readme
        run: ./scripts/regenerate-readmes.sh
      - name: Check for differences
        run: git diff --exit-code

  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: Run these tests on windows-latest. There are some issues around path separators:
        # https://github.com/facebookincubator/cargo-guppy/actions/runs/303264009
        os: [ ubuntu-latest, macos-latest ]
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      # Build all packages we care about one by one to ensure feature unification
      # doesn't happen.
      # Build all targets to ensure examples are built as well.
      - name: Build and test target-spec
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --package target-spec
      - name: Build and test guppy
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --package guppy
      - name: Build and test determinator
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --package determinator
      - name: Build and test cargo-guppy
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets --package cargo-guppy

  build-all-features:
    name: Build and test (all features)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          # Build all targets to ensure examples are built as well.
          command: build
          args: --all-targets --all-features
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  test-extended:
    name: cargo-compare extended tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    env:
      RUSTFLAGS: -D warnings
      PROPTEST_MULTIPLIER: 64
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build and test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package cargo-compare --release

  aarch64-build:
    runs-on: ubuntu-18.04
    name: Cross-compile to aarch64
    env:
      RUSTFLAGS: -D warnings
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-unknown-linux-gnu
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          # * Exclude cargo-compare because it depends on cargo, which in turn
          #   depends on openssl, and getting *that* to cross-compile is a
          #   headache.
          # * Build all targets to ensure examples are built as well.
          args: --target aarch64-unknown-linux-gnu --workspace --exclude cargo-compare --all-targets
      # TODO: run tests somehow? possibly through cross/qemu
