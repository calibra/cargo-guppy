version: 2
jobs:
  lint:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install Rust Components
          command: rustup component add rustfmt clippy
      - run:
          name: Component Version Information
          command: cargo fmt -- --version; cargo clippy -- --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Lint (rustfmt)
          command: |
            cargo fmt -- --check
      - run:
          name: Lint (clippy)
          command: |
            cargo clippy --all-features
      - run:
          name: Install cargo readme
          # Install in debug mode for a faster install
          command: |
            cargo install cargo-readme --debug
      - run:
          name: Run cargo readme
          command: |
            ./scripts/regenerate-readmes.sh
      - run:
          name: Check for differences
          command: |
            git diff --exit-code
  build:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Build and Test
          # Build all packages we care about one by one to ensure feature unification
          # doesn't happen.
          # Build all targets to ensure examples are built as well.
          command: |
            (cd target-spec && cargo build --all-targets && cargo test)
            (cd guppy && cargo build --all-targets && cargo test)
            (cd cargo-guppy && cargo build --all-targets && cargo test)

  build-all-features:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Build and Test
          # Build all targets to ensure examples are built as well.
          command: |
            cargo build --all-targets --all-features
            cargo test --all-features

  test-extended:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: cargo-compare extended tests
          # extended tests for cargo-compare are too slow to run in anything but release mode
          command: |
            cd internal-tools/cargo-compare
            PROPTEST_MULTIPLIER=64 cargo test --release

workflows:
  version: 2
  build:
    jobs:
      - lint
      - build
      - build-all-features
      - test-extended
